
#日志设置
logging:
  level:
    cn.edu.cqupt.nmid.smarthouse.controller: debug
  pattern:
    console: "%d{HH:mm:ss} [%thread] %-5level %logger{50} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} ** [%thread] ** %-5level ** %logger{50}** %msg%n"

##开启驼峰命名
#mybatis:
#  configuration:
#    mapUnderscoreToCamelCase: true

#Druid连接池,与rabbitmq
spring:
  application:
    name: sh-service-data`
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
    virtualHost: /
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/smarthouse?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
    password: 13452078118
    type: com.alibaba.druid.pool.DruidDataSource
    platform: mysql
    initialSize: 1
    minIdle: 3
    maxActive: 20
    maxWait: 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 25
    filters: stat,wall,slf4j
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
  http:
    encoding:
      charset: UTF-8
      enabled: true
  servlet:
    multipart:
      max-file-size: 10MB

#设置邮箱
  mail:
    host: smtp.qq.com
    title: 居家护理咨询与体征监测平台
    username: 2295268364@qq.com
    password: lrvdzgvzlzzlecag
    port: 587
    properties:
      smtp:
        ssl:
          enable: true
#Jpa配置
  jpa:
    show-sql: true
    format_sql: true
    hibernate:
      ddl-auto: update

#redis配置
  redis:
    host: localhost
    port: 6379
    max-wait: 30000  #连接池最大阻塞等待时间(使用负值表示没有限制)
    max-active: -1  #连接池最大连接数(使用负值表示没有限制)
    max-idle: 20     #连接池中的最大空闲连接
    min-idle: 0
#   timeout:       连接超时

server:
  tomcat:
    accesslog:
      encoding: UTF-8
    uri-encoding: UTF-8
  port: 41001

smarthouse:
  mq:
    registRoutingKey: regist
eureka:
  client:
    registerWithEureka: true #服务注册开关
    fetchRegistry: true #服务发现开关
    serviceUrl: #Eureka客户端与Eureka服务端进行交互的地址，多个中间用逗号分隔
      defaultZone: ${EUREKA_SERVER:http://localhost:50101/eureka/,http://localhost:50102/eureka/}
  instance:
    prefer-ip-address:  true  #将自己的ip地址注册到Eureka服务中
    ip-address: ${IP_ADDRESS:127.0.0.1}
    instance-id: ${spring.application.name}:${server.port} #指定实例id
ribbon:
  MaxAutoRetries: 2 #最大重试次数，当Eureka中可以找到服务，但是服务连不上时将会重试
  MaxAutoRetriesNextServer: 3 #切换实例的重试次数
  OkToRetryOnAllOperations: false  #对所有操作请求都进行重试，如果是get则可以，如果是post，put等操作没有实现幂等的情况下是很危险的,所以设置为false
  ConnectTimeout: 5000  #请求连接的超时时间
  ReadTimeout: 6000 #请求处理的超时时间